<form action="{{ routes.cart_url }}" method="post">
  {% for item in cart.items %}
    <h1>{{ item.title }}</h1>
    <p>{{ item.price | money }}</p>
    <div class="quantity">
      <input type="button" value="-" class="qty-minus" field="updates[]" data-variant-id="{{ item.variant_id }}">
      <input
        type="number"
        name="updates[]"
        id="updates_{{ item.variant_id }}"
        value="{{ item.quantity }}"
        min="0"
        pattern="[0-9]*"
      >
      <input type="button" value="+" class="qty-plus" field="updates[]" data-variant-id="{{ item.variant_id }}">
    </div>
    <button class="remove-item" data-variant-id="{{ item.variant_id }}">Remove</button>

    <div id="total-price">Total Price: {{ cart.total_price | currency }}</div>
  {% endfor %}

  <input type="submit" name="checkout" value="Checkout">
</form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Decrease quantity
    document.querySelectorAll('.qty-minus').forEach(function (button) {
      button.addEventListener('click', function () {
        var inputField = this.nextElementSibling;
        if (parseInt(inputField.value) > 0) {
          inputField.value = parseInt(inputField.value) - 1;
          updateCart(this.dataset.variantId, inputField.value);
        }
      });
    });

    // Increase quantity
    document.querySelectorAll('.qty-plus').forEach(function (button) {
      button.addEventListener('click', function () {
        var inputField = this.previousElementSibling;
        inputField.value = parseInt(inputField.value) + 1;
        updateCart(this.dataset.variantId, inputField.value);
      });
    });

    // Remove item
    document.querySelectorAll('.remove-item').forEach(function (button) {
      button.addEventListener('click', function () {
        updateCart(this.dataset.variantId, 0); // Set quantity to 0 to remove the item
        // Optionally, you can remove the HTML element for the item from the DOM
        this.parentNode.remove();
      });
    });

    function updateCart(variantId, quantity) {
      var xhr = new XMLHttpRequest();
      xhr.open('POST', '/cart/update.js', true);
      xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
      xhr.onload = function () {
        console.log('AJAX request successful');
        if (xhr.status >= 200 && xhr.status < 300) {
          var cart = JSON.parse(xhr.responseText);
          console.log('Cart updated:', cart);
          // Update any other elements on the page as needed

          // Update total price on the page
          var totalPriceElement = document.getElementById('total-price');

          // Use Intl.NumberFormat for formatting
          var formattedTotalPrice = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: cart.currency, // Assuming cart object has currency information
          }).format(cart.total_price / 100); // Dividing by 100 to convert cents to dollars

          totalPriceElement.innerHTML = 'Total Price: ' + formattedTotalPrice;
        }
      };
      xhr.send(JSON.stringify({ updates: { [variantId]: quantity } }));
    }
  });
</script>
